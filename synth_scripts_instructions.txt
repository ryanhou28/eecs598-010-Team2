Instructions from Panagiotis:

For combinatorial designs you can use aagcomb.sh {file} and for pipelined designs you can use pline.sh {file}.

Because I use ABC for synthesis the input file needs to be in low level structural verilog since the tool cannot parse behavioral verilog. Additionally sequential designs should not have the clock as an input since ABC adds it's own clock. I have attached an example file of that format.

For combinatorial designs the output will be {file}_N.v and for pipelined {file}_MAP.v.

And/Or gates at the resulting files correspond to LastArrival/FirstArrival in xsfq. Each input of the design has a buffer and an inverter to provide complementary signals, and every output has either a buffer or an inverter depending on whether the output has been assigned positive or negative polarity. These buffers/inverters are virtual and are only there to assist in verification, so if the output has an inverter the actual output should be the input of the inverter, which corresponds to the opposite of the output of the original design.

In order for the scripts to run, you will need a recent version of yosys for yosys-abc, the utility aig2aig from https://github.com/arminbiere/aiger , and the pip packages in requirements.txt.

