/* Generated by Yosys 0.25+99 (git sha1 54bf15a5b, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os) */

(* top =  1  *)
(* src = "adder_8bit.v:1.1-19.10" *)
module adder8(A, B, SUM);
  (* src = "../../Cells/all2nand.v:8.7-8.11" *)
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  (* src = "adder_8bit.v:2.17-2.18" *)
  input [7:0] A;
  wire [7:0] A;
  (* src = "adder_8bit.v:3.17-3.18" *)
  input [7:0] B;
  wire [7:0] B;
  (* src = "adder_8bit.v:7.16-7.17" *)
  (* unused_bits = "1" *)
  wire [1:0] C;
  (* src = "adder_8bit.v:4.18-4.21" *)
  output [7:0] SUM;
  wire [7:0] SUM;
  (* src = "adder_8bit.v:8.16-8.23" *)
  wire [7:0] int_sum;
  (* src = "adder_8bit.v:10.16-10.23" *)
  (* unused_bits = "7" *)
  wire [7:0] sat_sum;
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _17_ (
    .A(A[7]),
    .B(A[7]),
    .Y(_01_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _18_ (
    .A(int_sum[7]),
    .B(int_sum[7]),
    .Y(_02_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _19_ (
    .A(B[7]),
    .B(B[7]),
    .Y(_03_)
  );
  NAND _20_ (
    .A(A[7]),
    .B(B[7]),
    .Y(_04_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _21_ (
    .A(_04_),
    .B(_04_),
    .Y(_05_)
  );
  NAND _22_ (
    .A(_02_),
    .B(_05_),
    .Y(_06_)
  );
  NAND _23_ (
    .A(_01_),
    .B(int_sum[7]),
    .Y(_07_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _24_ (
    .A(_07_),
    .B(_07_),
    .Y(_08_)
  );
  NAND _25_ (
    .A(_03_),
    .B(_08_),
    .Y(_09_)
  );
  NAND _26_ (
    .A(int_sum[0]),
    .B(_09_),
    .Y(_10_)
  );
  NAND _27_ (
    .A(_06_),
    .B(_10_),
    .Y(SUM[0])
  );
  NAND _28_ (
    .A(int_sum[1]),
    .B(_09_),
    .Y(_11_)
  );
  NAND _29_ (
    .A(_06_),
    .B(_11_),
    .Y(SUM[1])
  );
  NAND _30_ (
    .A(int_sum[2]),
    .B(_09_),
    .Y(_12_)
  );
  NAND _31_ (
    .A(_06_),
    .B(_12_),
    .Y(SUM[2])
  );
  NAND _32_ (
    .A(int_sum[3]),
    .B(_09_),
    .Y(_13_)
  );
  NAND _33_ (
    .A(_06_),
    .B(_13_),
    .Y(SUM[3])
  );
  NAND _34_ (
    .A(int_sum[4]),
    .B(_09_),
    .Y(_14_)
  );
  NAND _35_ (
    .A(_06_),
    .B(_14_),
    .Y(SUM[4])
  );
  NAND _36_ (
    .A(int_sum[5]),
    .B(_09_),
    .Y(_15_)
  );
  NAND _37_ (
    .A(_06_),
    .B(_15_),
    .Y(SUM[5])
  );
  NAND _38_ (
    .A(int_sum[6]),
    .B(_09_),
    .Y(_16_)
  );
  NAND _39_ (
    .A(_06_),
    .B(_16_),
    .Y(SUM[6])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:9.6-9.26|../../Cells/all2nand.v:3.7-3.31" *)
  NAND _40_ (
    .A(int_sum[7]),
    .B(int_sum[7]),
    .Y(_00_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:10.6-10.23|../../Cells/all2nand.v:3.7-3.31" *)
  NAND _41_ (
    .A(int_sum[7]),
    .B(int_sum[7]),
    .Y(SUM[7])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "adder_8bit.v:11.10-11.83" *)
  cla4 cla1 (
    .A(A[3:0]),
    .B(B[3:0]),
    .CIN(1'h0),
    .COUT(C[0]),
    .SUM(int_sum[3:0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "adder_8bit.v:12.10-12.83" *)
  cla4 cla2 (
    .A(A[7:4]),
    .B(B[7:4]),
    .CIN(C[0]),
    .COUT(C[1]),
    .SUM(int_sum[7:4])
  );
  assign sat_sum[6:0] = { A[7], A[7], A[7], A[7], A[7], A[7], A[7] };
endmodule

(* src = "adder_8bit.v:22.1-52.10" *)
module cla4(A, B, CIN, SUM, COUT);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  (* src = "adder_8bit.v:23.17-23.18" *)
  input [3:0] A;
  wire [3:0] A;
  (* src = "adder_8bit.v:24.17-24.18" *)
  input [3:0] B;
  wire [3:0] B;
  (* src = "adder_8bit.v:30.16-30.17" *)
  wire [2:0] C;
  (* src = "adder_8bit.v:25.11-25.14" *)
  input CIN;
  wire CIN;
  (* src = "adder_8bit.v:27.12-27.16" *)
  output COUT;
  wire COUT;
  (* src = "adder_8bit.v:26.18-26.21" *)
  output [3:0] SUM;
  wire [3:0] SUM;
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _27_ (
    .A(A[0]),
    .B(A[0]),
    .Y(_00_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _28_ (
    .A(B[0]),
    .B(B[0]),
    .Y(_01_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _29_ (
    .A(A[1]),
    .B(A[1]),
    .Y(_02_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _30_ (
    .A(B[1]),
    .B(B[1]),
    .Y(_03_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _31_ (
    .A(A[2]),
    .B(A[2]),
    .Y(_04_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _32_ (
    .A(B[2]),
    .B(B[2]),
    .Y(_05_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _33_ (
    .A(A[3]),
    .B(A[3]),
    .Y(_06_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _34_ (
    .A(B[3]),
    .B(B[3]),
    .Y(_07_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _35_ (
    .A(CIN),
    .B(CIN),
    .Y(_08_)
  );
  NAND _36_ (
    .A(A[3]),
    .B(B[3]),
    .Y(_09_)
  );
  NAND _37_ (
    .A(A[2]),
    .B(B[2]),
    .Y(_10_)
  );
  NAND _38_ (
    .A(A[1]),
    .B(B[1]),
    .Y(_11_)
  );
  NAND _39_ (
    .A(_10_),
    .B(_11_),
    .Y(_12_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _40_ (
    .A(_12_),
    .B(_12_),
    .Y(_13_)
  );
  NAND _41_ (
    .A(A[0]),
    .B(CIN),
    .Y(_14_)
  );
  NAND _42_ (
    .A(_01_),
    .B(_14_),
    .Y(_15_)
  );
  NAND _43_ (
    .A(_00_),
    .B(_08_),
    .Y(_16_)
  );
  NAND _44_ (
    .A(_15_),
    .B(_16_),
    .Y(_17_)
  );
  NAND _45_ (
    .A(_13_),
    .B(_17_),
    .Y(_18_)
  );
  NAND _46_ (
    .A(_02_),
    .B(_03_),
    .Y(_19_)
  );
  NAND _47_ (
    .A(_06_),
    .B(_07_),
    .Y(_20_)
  );
  NAND _48_ (
    .A(_04_),
    .B(_05_),
    .Y(_21_)
  );
  NAND _49_ (
    .A(_19_),
    .B(_21_),
    .Y(_22_)
  );
  NAND _50_ (
    .A(_10_),
    .B(_22_),
    .Y(_23_)
  );
  NAND _51_ (
    .A(_20_),
    .B(_23_),
    .Y(_24_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _52_ (
    .A(_24_),
    .B(_24_),
    .Y(_25_)
  );
  NAND _53_ (
    .A(_18_),
    .B(_25_),
    .Y(_26_)
  );
  NAND _54_ (
    .A(_09_),
    .B(_26_),
    .Y(COUT)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "adder_8bit.v:32.16-32.77" *)
  full_adder fa0 (
    .a(A[0]),
    .b(B[0]),
    .cin(CIN),
    .cout(C[0]),
    .sum(SUM[0])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "adder_8bit.v:33.16-33.78" *)
  full_adder fa1 (
    .a(A[1]),
    .b(B[1]),
    .cin(C[0]),
    .cout(C[1]),
    .sum(SUM[1])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "adder_8bit.v:34.16-34.78" *)
  full_adder fa2 (
    .a(A[2]),
    .b(B[2]),
    .cin(C[1]),
    .cout(C[2]),
    .sum(SUM[2])
  );
  (* module_not_derived = 32'd1 *)
  (* src = "adder_8bit.v:35.16-35.74" *)
  full_adder fa3 (
    .a(A[3]),
    .b(B[3]),
    .cin(C[2]),
    .sum(SUM[3])
  );
endmodule

(* src = "adder_8bit.v:56.1-65.10" *)
module full_adder(a, b, cin, sum, cout);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  (* src = "adder_8bit.v:57.11-57.12" *)
  input a;
  wire a;
  (* src = "adder_8bit.v:57.13-57.14" *)
  input b;
  wire b;
  (* src = "adder_8bit.v:57.15-57.18" *)
  input cin;
  wire cin;
  (* src = "adder_8bit.v:58.16-58.20" *)
  output cout;
  wire cout;
  (* src = "adder_8bit.v:58.12-58.15" *)
  output sum;
  wire sum;
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _10_ (
    .A(a),
    .B(a),
    .Y(_06_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _11_ (
    .A(b),
    .B(b),
    .Y(_07_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _12_ (
    .A(cin),
    .B(cin),
    .Y(_08_)
  );
  NAND _13_ (
    .A(a),
    .B(b),
    .Y(_09_)
  );
  NAND _14_ (
    .A(_06_),
    .B(_07_),
    .Y(_00_)
  );
  NAND _15_ (
    .A(_09_),
    .B(_00_),
    .Y(_01_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _16_ (
    .A(_01_),
    .B(_01_),
    .Y(_02_)
  );
  NAND _17_ (
    .A(cin),
    .B(_02_),
    .Y(_03_)
  );
  NAND _18_ (
    .A(_08_),
    .B(_01_),
    .Y(_04_)
  );
  NAND _19_ (
    .A(_03_),
    .B(_04_),
    .Y(_05_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../../Cells/all2nand.v:3.7-3.31" *)
  NAND _20_ (
    .A(_05_),
    .B(_05_),
    .Y(sum)
  );
  NAND _21_ (
    .A(_09_),
    .B(_03_),
    .Y(cout)
  );
endmodule
